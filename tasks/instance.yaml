#- name: search for an ami image
#  ec2_ami_search: >
#    region={{ region|default('us-east-1') }}
#    store={{ store|default('ebs') }}
#    virt={{ virt|default('hvm') }}
#    distro={{ distro|default('ubuntu') }}
#    release={{ release|default('precise') }}
#  register: ami_data

#- name: debug ami image
#  debug: 'msg="{{ ami_data }}"'

- name: start the ec2 instances
  ec2:
    key_name: "{{ keypair|default('mykey') }}"
    group: ['Common-sg','{{ item.name }}-sg']
    instance_type: "{{ item.instance_type|default('t2.micro')}}"
    image: "{{ image|default('ami-146e2a7c') }}"
    region: "{{ region|default('us-east-1') }}"
    assign_public_ip: yes
    vpc_subnet_id: "{{ web_subnet_id }}"
    wait: yes
    exact_count: 1
    count_tag:
      Name: "{{ item.name }}"
    instance_tags:
        Name: "{{ item.name|default('myinstance')}}"
        Type: "{{ item.type|default('cloud_server')}}"
  with_items:
    - name: Proxy
      instance_type: t2.micro
    - name: Monitor
      instance_type: t2.micro
    - name: Redis
      instance_type: t2.micro
      type: DockerHost
    - name: AdminApp
      instance_type: t2.micro
      type: DockerHost
    - name: BlogApp
      instance_type: t2.micro
      type: DockerHost
  register: ec2

- name: debug ec2 start
  debug: 'msg="{{ ec2 }}"'


- name: Add all instance public IPs to host group
  add_host:
    hostname: "{{ item.tagged_instances[0].public_ip }}"
    groups: "tag_Name_{{ item.item.name }}"
  with_items: ec2.results
