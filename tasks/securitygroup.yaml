- name: create the common security group
  ec2_group:
    name: Common-sg
    description: "ansible generated common group"
    region: "{{ region|default('us-east-1') }}"
    vpc_id: "{{ vpc_data.vpc_id }}"
    rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
    rules_egress:
        - proto: all
          cidr_ip: "0.0.0.0/0"
  register: common_securitygroup

- name: debug common security group
  debug: "msg='{{ common_securitygroup }}'"


- name: create the security group for Proxy
  ec2_group:
    name: Proxy-sg
    description: "ansible generated group for Proxy"
    region: "{{ region|default('us-east-1') }}"
    vpc_id: "{{ vpc_data.vpc_id }}"
    rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 10050
          to_port: 10050
          cidr_ip: 10.220.20.0/24
    rules_egress:
        - proto: all
          cidr_ip: "0.0.0.0/0"
  register: proxy_securitygroup

- name: debug proxy security group
  debug: "msg='{{ proxy_securitygroup }}'"


- name: create the security group for RDS
  ec2_group:
    name: RDS-sg
    description: "ansible generated group for RDS"
    region: "{{ region|default('us-east-1') }}"
    vpc_id: "{{ vpc_data.vpc_id }}"
    rules:
        - proto: tcp
          from_port: 5432
          to_port: 5432
          group_name: AdminApp-sg
          group_desc: For AdminApp
        - proto: tcp
          from_port: 5432
          to_port: 5432
          group_name: BlogApp-sg
          group_desc: For BlogApp
    rules_egress:
        - proto: all
          cidr_ip: "0.0.0.0/0"
  register: rds_securitygroup

- name: debug rds security group
  debug: "msg='{{ rds_securitygroup }}'"


- name: create the security group for Redis
  ec2_group:
    name: Redis-sg
    description: "ansible generated group for Redis"
    region: "{{ region|default('us-east-1') }}"
    vpc_id: "{{ vpc_data.vpc_id }}"
    rules:
        - proto: tcp
          from_port: 6379
          to_port: 6379
          group_name: Proxy-sg
          group_desc: For Proxy-sg
        - proto: tcp
          from_port: 10050
          to_port: 10050
          cidr_ip: 10.220.20.0/24
    rules_egress:
        - proto: all
          cidr_ip: "0.0.0.0/0"
  register: redis_securitygroup

- name: debug redis security group
  debug: "msg='{{ redis_securitygroup }}'"

- name: create the security group for AdminApp
  ec2_group:
    name: AdminApp-sg
    description: "ansible generated group for AdminApp"
    region: "{{ region|default('us-east-1') }}"
    vpc_id: "{{ vpc_data.vpc_id }}"
    rules:
        - proto: tcp
          from_port: 8080
          to_port: 8080
          group_name: Proxy-sg
          group_desc: For Proxy-sg
        - proto: tcp
          from_port: 10050
          to_port: 10050
          cidr_ip: 10.220.20.0/24
    rules_egress:
        - proto: all
          cidr_ip: "0.0.0.0/0"
  register: admin_securitygroup

- name: debug Apps security group
  debug: "msg='{{ admin_securitygroup }}'"

- name: create the security group for BlogApp
  ec2_group:
    name: BlogApp-sg
    description: "ansible generated group for BlogApp"
    region: "{{ region|default('us-east-1') }}"
    vpc_id: "{{ vpc_data.vpc_id }}"
    rules:
        - proto: tcp
          from_port: 8080
          to_port: 8080
          group_name: Proxy-sg
          group_desc: For Proxy-sg
        - proto: tcp
          from_port: 10050
          to_port: 10050
          cidr_ip: 10.220.20.0/24
    rules_egress:
        - proto: all
          cidr_ip: "0.0.0.0/0"
  register: blog_securitygroup

- name: debug Apps security group
  debug: "msg='{{ blog_securitygroup }}'"


- name: create the security group for Monitoring
  ec2_group:
    name: Monitor-sg
    description: "ansible generated group for Monitoring"
    region: "{{ region|default('us-east-1') }}"
    vpc_id: "{{ vpc_data.vpc_id }}"
    rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 10051
          to_port: 10051
          cidr_ip: 10.220.20.0/24
    rules_egress:
        - proto: all
          cidr_ip: "0.0.0.0/0"
  register: monitor_securitygroup

- name: debug Apps security group
  debug: "msg='{{ monitor_securitygroup }}'"
